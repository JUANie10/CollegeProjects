41 2 0
38 1
11 444 132 471 34 0 1
25 114 402 221 306
20 246 312 305 293 0
in3
20 252 336 311 317 0
in2
20 258 360 317 341 0
in1
20 264 384 323 365 0
in0
8 108 252 157 203 1 1
20 228 228 287 209 0
getrnd
19 330 108 389 89 0
reg3
19 342 132 401 113 0
reg2
19 354 156 413 137 0
reg1
19 366 180 425 161 0
reg0
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 85 34 0 \NUL
Lee, Juan
22 18 78 73 58 0 \NUL
Jlee543
11 708 132 735 34 0 1
11 630 132 657 34 0 0
22 588 30 742 10 0 \NUL
(signed) Decimal Score
22 24 330 90 310 0 \NUL
Gamepad
22 18 246 108 226 0 \NUL
New Problem
8 108 156 157 107 1 1
20 228 132 287 113 0
reset
5 174 156 223 107 0
22 18 132 101 112 0 \NUL
Reset Score
19 624 150 683 131 0
score3
19 630 174 689 155 0
score2
19 636 198 695 179 0
score1
19 642 222 701 203 0
score0
19 498 96 557 77 0
sgn6
19 504 120 563 101 0
sgn5
19 510 144 569 125 0
sgn4
19 516 168 575 149 0
sgn3
19 522 192 581 173 0
sgn2
19 528 216 587 197 0
sgn1
19 534 240 593 221 0
sgn0
11 720 426 747 328 0 1
19 618 402 677 383 0
ans3
19 630 426 689 407 0
ans2
19 636 450 695 431 0
ans1
19 648 474 707 455 0
ans0
22 390 30 530 10 0 \NUL
Score Register Value
22 678 324 779 304 0 \NUL
Correct Answer
22 12 444 96 424 0 \NUL
How to play:
22 12 516 392 496 0 \NUL
3. Press "New Problem" to generate a new set of numbers
22 12 540 434 520 0 \NUL
4. Guess the result of r0 + r1 (function = 0) or r0 - r1 (function = 1)
22 12 468 165 448 0 \NUL
1. Press "Reset Score"
22 12 588 238 568 0 \NUL
6. Repeat steps 2 - 5 until satiated
8 108 204 157 155 1 0
20 228 180 287 161 0
func
22 18 210 96 190 0 \NUL
0 => r0 + r1
8 108 300 157 251 1 1
20 228 276 287 257 0
update
22 18 276 109 256 0 \NUL
Update Score
22 12 564 421 544 0 \NUL
5. Press "Update Score" (+1 correct guess, - 1 incorrect guess)
22 18 192 92 172 0 \NUL
1 => r0 - r1
19 342 402 401 383 0
r0_3
19 348 426 407 407 0
r0_2
19 354 450 413 431 0
r0_1
19 360 474 419 455 0
r0_0
11 438 426 465 328 0 1
19 474 402 533 383 0
r1_3
19 480 426 539 407 0
r1_2
19 486 450 545 431 0
r1_1
19 492 474 551 455 0
r1_0
11 570 426 597 328 0 1
22 414 324 496 304 0 \NUL
Random # 0
22 546 324 628 304 0 \NUL
Random # 1
7 528 564 577 515 2 1
19 468 540 527 521 0
ovrflw
22 516 516 577 496 0 \NUL
Overflow
22 510 264 692 244 0 \NUL
max score implemented? N
22 12 492 271 472 0 \NUL
2. Select function (0 = add, 1 = subtract)
22 18 174 77 154 0 \NUL
Function
8 660 564 709 515 1 0
22 666 510 707 490 0 \NUL
Cheat
20 726 534 785 515 0
cheat
22 577 594 775 574 0 \NUL
cheat switch implemented?  Y
22 510 288 692 268 0 \NUL
min score implemented?  N
1 218 374 247 302
1 218 380 253 326
1 218 386 259 350
1 218 392 265 374
1 154 227 229 218
1 386 98 445 98
1 398 122 445 104
1 410 146 445 110
1 422 170 445 116
1 220 131 229 122
1 154 131 175 131
1 680 140 709 98
1 686 164 709 104
1 692 188 709 110
1 698 212 709 116
1 554 86 631 86
1 560 110 631 92
1 566 134 631 98
1 572 158 631 104
1 578 182 631 110
1 584 206 631 116
1 590 230 631 122
1 674 392 721 392
1 686 416 721 398
1 692 440 721 404
1 704 464 721 410
1 229 170 154 179
1 154 275 229 266
1 416 464 439 410
1 410 440 439 404
1 404 416 439 398
1 398 392 439 392
1 548 464 571 410
1 542 440 571 404
1 536 416 571 398
1 530 392 571 392
1 524 530 529 539
1 727 524 706 539
38 2
34 102 288 151 239 0 0
20 180 192 239 173 0
r0_0
20 186 216 245 197 0
r0_1
20 192 240 251 221 0
r0_2
20 198 264 257 245 0
r0_3
19 30 258 89 239 0
getrnd
34 102 438 151 389 0 0
20 180 342 239 323 0
r1_0
20 186 366 245 347 0
r1_1
20 192 390 251 371 0
r1_2
20 198 414 257 395 0
r1_3
19 30 408 89 389 0
getrnd
22 84 318 166 298 0 \NUL
Random # 0
22 84 468 166 448 0 \NUL
Random # 1
22 18 156 412 136 0 \NUL
random numbers (do not modify random number generators)
20 684 186 743 167 0
sgn6
20 684 204 743 185 0
sgn5
20 684 222 743 203 0
sgn4
20 684 258 743 239 0
sgn2
20 684 276 743 257 0
sgn1
20 684 294 743 275 0
sgn0
22 564 78 794 58 0 \NUL
placeholder senders and receivers
22 426 546 792 526 0 \NUL
these are only present so circuit simulates without error
22 492 570 759 550 0 \NUL
remove these once logic is implemented
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 85 34 0 \NUL
Lee, Juan
22 18 78 73 58 0 \NUL
Jlee543
1 148 242 181 182
1 148 248 187 206
1 148 260 193 230
1 148 278 199 254
1 103 248 86 248
1 103 398 86 398
1 199 404 148 422
1 193 380 148 416
1 187 356 148 410
1 181 332 148 404
38 3
22 264 30 590 10 0 \NUL
Function Logic (either add or subtract Random #1)
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 89 34 0 \NUL
Lee, Juan 
22 18 78 73 58 0 \NUL
Jlee543
19 210 168 269 149 0
func
19 210 210 269 191 0
r1_0
35 288 204 337 155 0 0
20 288 144 347 125 0
c_0
20 366 192 425 173 0
r11_0
19 210 246 269 227 0
func
19 210 288 269 269 0
r1_1
35 288 282 337 233 0 0
20 366 270 425 251 0
r11_1
19 210 324 269 305 0
func
19 210 366 269 347 0
r1_2
35 288 360 337 311 0 0
20 366 348 425 329 0
r11_2
19 210 396 269 377 0
func
19 210 438 269 419 0
r1_3
35 288 432 337 383 0 0
20 366 420 425 401 0
r11_3
22 102 498 669 478 0 \NUL
By using xor, this ciruit is able to determine if the numbers are going to add or subtract
22 234 72 664 52 0 \NUL
When inverting the numbers to two's complement for subtraction, 
22 216 114 675 94 0 \NUL
I need to add one and when the function is 1 the first carry in is also 1.
1 266 158 289 165
1 266 200 289 193
1 334 179 367 182
1 266 236 289 243
1 266 278 289 271
1 334 257 367 260
1 266 314 289 321
1 266 356 289 349
1 334 335 367 338
1 266 386 289 393
1 266 428 289 421
1 334 407 367 410
1 266 158 289 134
38 4
22 324 30 510 10 0 \NUL
4-bit Random Number Adder
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 85 34 0 \NUL
Lee, Juan
22 18 78 73 58 0 \NUL
Jlee543
19 36 180 95 161 0
r0_0
19 36 210 95 191 0
r11_0
19 36 270 95 251 0
r0_0
19 36 300 95 281 0
r11_0
20 306 264 365 245 0
c_1
20 306 180 365 161 0
anss0
35 120 198 169 149 0 0
35 246 192 295 143 0 0
3 168 252 217 203 0 0
3 180 300 229 251 0 0
4 246 282 295 233 0 0
19 96 246 155 227 0
c_0
19 180 198 239 179 0
c_0
19 36 354 95 335 0
r0_1
19 36 384 95 365 0
r11_1
19 36 444 95 425 0
r0_1
19 36 474 95 455 0
r11_1
20 306 438 365 419 0
c_2
20 306 354 365 335 0
anss1
35 120 372 169 323 0 0
35 246 366 295 317 0 0
3 168 426 217 377 0 0
3 180 474 229 425 0 0
4 246 456 295 407 0 0
19 96 420 155 401 0
c_1
19 180 372 239 353 0
c_1
19 432 168 491 149 0
r0_2
19 432 198 491 179 0
r11_2
19 432 258 491 239 0
r0_2
19 432 288 491 269 0
r11_2
20 702 252 761 233 0
c_3
20 702 168 761 149 0
anss2
35 516 186 565 137 0 0
35 642 180 691 131 0 0
3 564 240 613 191 0 0
3 576 288 625 239 0 0
4 642 270 691 221 0 0
19 492 234 551 215 0
c_2
19 576 186 635 167 0
c_2
19 432 330 491 311 0
r0_3
19 432 360 491 341 0
r11_3
19 432 420 491 401 0
r0_3
19 432 450 491 431 0
r11_3
20 702 414 761 395 0
c_4
20 702 330 761 311 0
anss3
35 516 348 565 299 0 0
35 642 342 691 293 0 0
3 564 402 613 353 0 0
3 576 450 625 401 0 0
4 642 432 691 383 0 0
19 492 396 551 377 0
c_3
19 576 348 635 329 0
c_3
22 264 504 571 484 0 \NUL
This logic ciruit adds the two random numbers 
22 342 534 448 514 0 \NUL
Addition: r1 + r2
22 324 564 463 544 0 \NUL
Subtraction: r1 + (-r2)
1 92 170 121 159
1 92 200 121 187
1 92 260 181 261
1 92 290 181 289
1 166 173 169 213
1 166 173 247 153
1 226 275 247 271
1 214 227 247 243
1 292 257 307 254
1 292 167 307 170
1 236 188 247 181
1 152 236 169 241
1 92 344 121 333
1 92 374 121 361
1 92 434 181 435
1 92 464 181 463
1 166 347 169 387
1 166 347 247 327
1 226 449 247 445
1 214 401 247 417
1 292 431 307 428
1 292 341 307 344
1 236 362 247 355
1 152 410 169 415
1 488 158 517 147
1 488 188 517 175
1 488 248 577 249
1 488 278 577 277
1 562 161 565 201
1 562 161 643 141
1 622 263 643 259
1 610 215 643 231
1 688 245 703 242
1 688 155 703 158
1 632 176 643 169
1 548 224 565 229
1 488 320 517 309
1 488 350 517 337
1 488 410 577 411
1 488 440 577 439
1 562 323 565 363
1 562 323 643 303
1 622 425 643 421
1 610 377 643 393
1 688 407 703 404
1 688 317 703 320
1 632 338 643 331
1 548 386 565 391
38 5
22 336 30 436 10 0 \NUL
Overflow Logic
22 276 54 566 34 0 \NUL
logic to determine if computation overflowed
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 85 34 0 \NUL
Lee, Juan
22 18 78 73 58 0 \NUL
Jlee543
19 192 204 251 185 0
c_4
20 426 222 485 203 0
ovrflw
19 192 240 251 221 0
c_3
35 306 234 355 185 0 0
22 102 306 796 286 0 \NUL
By comparing the two most significant carry outs, I was able to determine if the basic operation overflowed
22 330 342 462 322 0 \NUL
Same = no overflow
22 330 378 458 358 0 \NUL
different = overflow
1 248 194 307 195
1 248 230 307 223
1 352 209 427 212
38 6
22 342 30 453 10 0 \NUL
4-bit Comparator
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 85 34 0 \NUL
Lee, Juan
22 18 78 73 58 0 \NUL
Jlee543
35 258 180 307 131 0 1
19 174 150 233 131 0
anss0
19 174 180 233 161 0
in0
35 258 240 307 191 0 1
19 174 210 233 191 0
anss1
19 174 240 233 221 0
in1
35 258 300 307 251 0 1
19 174 270 233 251 0
anss2
19 174 300 233 281 0
in2
35 258 360 307 311 0 1
19 174 330 233 311 0
anss3
19 174 360 233 341 0
in3
3 366 210 415 161 0 0
3 372 330 421 281 0 0
3 486 264 535 215 0 0
20 588 246 647 227 0
com0
22 132 402 683 382 0 \NUL
This logic ciruit compares if the input and the answer from logic ciruits are the same.
1 230 170 259 169
1 230 140 259 141
1 230 230 259 229
1 230 200 259 201
1 230 290 259 289
1 230 260 259 261
1 230 350 259 349
1 230 320 259 321
1 304 155 367 171
1 304 215 367 199
1 304 275 373 291
1 304 335 373 319
1 418 305 487 253
1 412 185 487 225
1 532 239 589 236
38 7
22 342 30 459 10 0 \NUL
4-bit Multiplexors
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 89 34 0 \NUL
Lee, Juan 
22 18 78 73 58 0 \NUL
Jlee543
19 30 372 89 353 0
com0
3 156 414 205 365 0 0
4 222 378 271 329 0 0
20 294 360 353 341 0
add1
19 30 204 89 185 0
com0
5 96 192 145 143 0
3 156 168 205 119 0 0
3 156 246 205 197 0 0
4 222 210 271 161 0 0
20 294 192 353 173 0
add0
15 84 270 133 221
15 90 156 139 107
3 156 348 205 299 0 0
5 96 360 145 311 0
15 72 330 121 281
14 66 432 115 383
19 384 198 443 179 0
com0
3 510 240 559 191 0 0
4 576 192 625 143 0 0
20 648 174 707 155 0
add2
3 510 174 559 125 0 0
5 450 186 499 137 0
15 426 156 475 107
14 420 258 469 209
19 384 384 443 365 0
com0
3 510 426 559 377 0 0
4 576 390 625 341 0 0
20 648 372 707 353 0
add3
3 510 360 559 311 0 0
5 450 372 499 323 0
15 426 342 475 293
14 420 444 469 395
22 120 480 740 460 0 \NUL
These multiplexors sends either -1 or 1 to be added depending on the output of the comparator.
22 318 510 514 490 0 \NUL
if the inputs were right, plus 1
22 312 540 546 520 0 \NUL
If the inputs were wrong, minus one
1 86 362 157 375
1 202 389 223 367
1 268 353 295 350
1 86 194 97 167
1 142 167 157 157
1 86 194 157 207
1 202 221 223 199
1 202 143 223 171
1 136 131 157 129
1 130 245 157 235
1 268 185 295 182
1 202 323 223 339
1 86 362 97 335
1 142 335 157 337
1 118 305 157 309
1 112 407 157 403
1 440 188 511 201
1 556 215 577 181
1 622 167 649 164
1 556 149 577 153
1 440 188 451 161
1 496 161 511 163
1 472 131 511 135
1 466 233 511 229
1 440 374 511 387
1 556 401 577 379
1 622 365 649 362
1 556 335 577 351
1 440 374 451 347
1 496 347 511 349
1 472 317 511 321
1 466 419 511 415
38 8
22 342 30 456 10 0 \NUL
4-bit Score Adder
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 85 34 0 \NUL
Lee, Juan
22 18 78 73 58 0 \NUL
Jlee543
19 30 174 89 155 0
add0
19 30 204 89 185 0
d0
19 30 240 89 221 0
add0
19 30 270 89 251 0
d0
20 300 258 359 239 0
c_11
20 300 174 359 155 0
real0
35 114 192 163 143 0 0
35 210 186 259 137 0 0
3 174 258 223 209 0 0
3 174 294 223 245 0 0
4 240 276 289 227 0 0
14 108 222 157 173
14 162 210 211 161
19 36 348 95 329 0
add1
19 36 378 95 359 0
d1
19 36 438 95 419 0
add1
19 36 468 95 449 0
d1
20 306 432 365 413 0
c_22
20 306 348 365 329 0
real1
35 120 366 169 317 0 0
35 246 360 295 311 0 0
3 168 420 217 371 0 0
3 180 468 229 419 0 0
4 246 450 295 401 0 0
19 96 414 155 395 0
c_11
19 180 366 239 347 0
c_11
19 432 348 491 329 0
add2
19 432 378 491 359 0
d2
19 432 438 491 419 0
add2
19 432 468 491 449 0
d2
20 702 432 761 413 0
c_33
20 702 348 761 329 0
real2
35 516 366 565 317 0 0
35 642 360 691 311 0 0
3 564 420 613 371 0 0
3 576 468 625 419 0 0
4 642 450 691 401 0 0
19 492 414 551 395 0
c_22
19 576 366 635 347 0
c_22
19 432 144 491 125 0
add3
19 432 174 491 155 0
d3
19 432 234 491 215 0
add3
19 432 264 491 245 0
d3
20 702 144 761 125 0
real3
35 516 162 565 113 0 0
35 642 156 691 107 0 0
3 564 216 613 167 0 0
3 576 264 625 215 0 0
4 642 246 691 197 0 0
19 492 210 551 191 0
c_33
19 576 162 635 143 0
c_33
22 114 528 793 508 0 \NUL
This logic ciruit adds either a -1 or 1 depending on if the inputs matched the answer from the logic ciruits
22 330 558 526 538 0 \NUL
if the inputs were right, plus 1
22 324 588 558 568 0 \NUL
If the inputs were wrong, minus one
1 86 164 115 153
1 86 194 115 181
1 86 230 175 255
1 86 260 175 283
1 160 167 175 219
1 160 167 211 147
1 220 269 241 265
1 220 233 241 237
1 286 251 301 248
1 154 197 175 247
1 256 161 301 164
1 208 185 211 175
1 92 338 121 327
1 92 368 121 355
1 92 428 181 429
1 92 458 181 457
1 166 341 169 381
1 166 341 247 321
1 226 443 247 439
1 214 395 247 411
1 292 425 307 422
1 292 335 307 338
1 236 356 247 349
1 152 404 169 409
1 488 338 517 327
1 488 368 517 355
1 488 428 577 429
1 488 458 577 457
1 562 341 565 381
1 562 341 643 321
1 622 443 643 439
1 610 395 643 411
1 688 425 703 422
1 688 335 703 338
1 632 356 643 349
1 548 404 565 409
1 488 134 517 123
1 488 164 517 151
1 488 224 577 225
1 488 254 577 253
1 562 137 565 177
1 562 137 643 117
1 622 239 643 235
1 610 191 643 207
1 688 131 703 134
1 632 152 643 145
1 548 200 565 205
38 9
22 342 30 474 10 0 \NUL
4-bit Score Register
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 85 34 0 \NUL
Lee, Juan
22 18 78 73 58 0 \NUL
Jlee543
24 102 294 151 222 1 1 1
24 294 294 343 222 1 1 1
24 480 294 529 222 1 1 1
24 684 294 733 222 1 1 1
19 60 330 119 311 0
reset
19 252 330 311 311 0
reset
19 438 336 497 317 0
reset
19 648 336 707 317 0
reset
15 72 216 121 167
15 258 216 307 167
15 456 216 505 167
15 654 216 703 167
20 156 252 215 233 0
d0
20 348 252 407 233 0
d1
20 534 252 593 233 0
d2
20 738 252 797 233 0
d3
19 36 270 95 251 0
update
19 228 270 287 251 0
update
19 414 270 473 251 0
update
19 612 276 671 257 0
update
19 612 246 671 227 0
real3
19 414 246 473 227 0
real2
19 228 240 287 221 0
real1
19 36 246 95 227 0
real0
22 102 420 727 400 0 \NUL
These flip flops hold the score of how many the participant got right or how many they got wrong
22 186 456 647 436 0 \NUL
The score only updates if the update button is pushed on the first page
22 204 486 646 466 0 \NUL
The score resets when the reset button is pressed on the first page.
1 116 320 116 290
1 308 320 308 290
1 494 326 494 290
1 704 326 698 290
1 118 191 116 224
1 304 191 308 224
1 502 191 494 224
1 700 191 698 224
1 148 242 157 242
1 340 242 349 242
1 526 242 535 242
1 730 242 739 242
1 668 236 685 242
1 668 266 685 260
1 470 236 481 242
1 470 260 481 260
1 284 260 295 260
1 284 230 295 242
1 92 236 103 242
1 92 260 103 260
38 10
22 342 30 435 10 0 \NUL
Display Logic
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 89 34 0 \NUL
Lee, Juan 
22 18 78 73 58 0 \NUL
Jlee543
19 24 120 83 101 0
d0
20 90 120 149 101 0
reg0
19 24 144 83 125 0
d1
20 90 144 149 125 0
reg1
19 24 168 83 149 0
d2
20 90 168 149 149 0
reg2
19 24 192 83 173 0
d3
20 90 192 149 173 0
reg3
20 420 564 479 545 0
sgn3
19 312 564 371 545 0
d3
19 312 480 371 461 0
d3
20 414 480 473 461 0
c_000
19 330 132 389 113 0
d3
19 330 174 389 155 0
d0
35 408 168 457 119 0 0
20 486 156 545 137 0
s0
19 330 210 389 191 0
d3
19 330 252 389 233 0
d1
35 408 246 457 197 0 0
20 486 234 545 215 0
s1
19 330 288 389 269 0
d3
19 330 330 389 311 0
d2
35 408 324 457 275 0 0
20 486 312 545 293 0
s2
19 330 360 389 341 0
d3
19 330 402 389 383 0
d3
35 408 396 457 347 0 0
20 486 384 545 365 0
s3
22 18 228 303 208 0 \NUL
Send the bits in hexadecimal to a displayer
22 186 600 632 580 0 \NUL
If the bits in decimal is negative, this activates the negative symbol.
22 188 444 800 424 0 \NUL
Inverts the bits if the bits are negative in decimal and leaves it alone if its positive in decimal.
22 252 516 648 496 0 \NUL
This sends 1 to the carry in if the bits in decimal is negative.
1 80 110 91 110
1 80 134 91 134
1 80 158 91 158
1 80 182 91 182
1 368 554 421 554
1 368 470 415 470
1 386 122 409 129
1 386 164 409 157
1 454 143 487 146
1 386 200 409 207
1 386 242 409 235
1 454 221 487 224
1 386 278 409 285
1 386 320 409 313
1 454 299 487 302
1 386 350 409 357
1 386 392 409 385
1 454 371 487 374
38 11
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 89 34 0 \NUL
Lee, Juan 
22 18 78 73 58 0 \NUL
Jlee543
19 84 510 143 491 0
real00
19 84 534 143 515 0
real11
19 84 558 143 539 0
real22
19 84 582 143 563 0
real33
20 168 510 227 491 0
score0
20 168 534 227 515 0
score1
20 168 558 227 539 0
score2
20 168 582 227 563 0
score3
19 72 354 131 335 0
s1
19 72 444 131 425 0
s1
20 342 408 401 389 0
c_222
20 342 324 401 305 0
real11
35 156 342 205 293 0 0
35 282 336 331 287 0 0
3 204 396 253 347 0 0
3 216 444 265 395 0 0
4 282 426 331 377 0 0
19 132 390 191 371 0
c_111
19 216 342 275 323 0
c_111
14 30 426 79 377
14 60 318 109 269
19 438 150 497 131 0
s3
19 438 240 497 221 0
s3
20 708 120 767 101 0
real33
35 522 138 571 89 0 0
35 648 132 697 83 0 0
3 570 192 619 143 0 0
3 582 240 631 191 0 0
4 648 222 697 173 0 0
19 498 186 557 167 0
c_333
19 582 138 641 119 0
c_333
14 396 222 445 173
14 426 114 475 65
19 444 360 503 341 0
s2
19 444 450 503 431 0
s2
20 714 414 773 395 0
c_333
20 714 330 773 311 0
real22
35 528 348 577 299 0 0
35 654 342 703 293 0 0
3 576 402 625 353 0 0
3 588 450 637 401 0 0
4 654 432 703 383 0 0
19 504 396 563 377 0
c_222
19 588 348 647 329 0
c_222
14 402 432 451 383
14 432 324 481 275
19 54 162 113 143 0
s0
19 54 264 113 245 0
s0
20 324 216 383 197 0
c_111
20 324 132 383 113 0
real00
35 138 150 187 101 0 0
35 264 144 313 95 0 0
3 186 204 235 155 0 0
3 198 252 247 203 0 0
4 264 234 313 185 0 0
19 126 198 185 179 0
c_000
19 198 144 257 125 0
c_000
14 48 132 97 83
14 60 234 109 185
22 30 600 338 580 0 \NUL
This sends the bits in decimal to the displayer.
22 245 492 800 472 0 \NUL
This adder adds 1 if necessary in converting two's complement to a negative number
22 330 42 483 22 0 \NUL
Display Logic Part Two
1 140 500 169 500
1 140 524 169 524
1 140 548 169 548
1 140 572 169 572
1 128 344 157 331
1 128 434 217 433
1 202 317 205 357
1 202 317 283 297
1 262 419 283 415
1 250 371 283 387
1 328 401 343 398
1 328 311 343 314
1 272 332 283 325
1 188 380 205 385
1 106 293 157 303
1 76 401 217 405
1 494 140 523 127
1 494 230 583 229
1 568 113 571 153
1 568 113 649 93
1 628 215 649 211
1 616 167 649 183
1 694 107 709 110
1 638 128 649 121
1 554 176 571 181
1 472 89 523 99
1 442 197 583 201
1 500 350 529 337
1 500 440 589 439
1 574 323 577 363
1 574 323 655 303
1 634 425 655 421
1 622 377 655 393
1 700 407 715 404
1 700 317 715 320
1 644 338 655 331
1 560 386 577 391
1 478 299 529 309
1 448 407 589 411
1 110 152 139 139
1 110 254 199 241
1 184 125 187 165
1 184 125 265 105
1 244 227 265 223
1 232 179 265 195
1 310 209 325 206
1 310 119 325 122
1 106 209 199 213
1 94 107 139 111
1 254 134 265 133
1 182 188 187 193
38 12
19 84 162 143 143 0
cheat
5 150 150 199 101 0
3 210 126 259 77 0 0
3 210 204 259 155 0 0
4 276 168 325 119 0 0
20 348 150 407 131 0
ans0
19 120 205 179 186 0
anss0
14 97 105 146 56
19 78 336 137 317 0
cheat
5 144 324 193 275 0
3 204 300 253 251 0 0
3 204 378 253 329 0 0
4 270 342 319 293 0 0
20 342 324 401 305 0
ans1
19 114 379 173 360 0
anss1
14 91 279 140 230
19 455 166 514 147 0
cheat
5 521 154 570 105 0
3 581 130 630 81 0 0
3 581 208 630 159 0 0
4 647 172 696 123 0 0
20 709 154 768 135 0
ans2
19 491 209 550 190 0
anss2
14 468 109 517 60
19 448 339 507 320 0
cheat
5 514 327 563 278 0
3 574 303 623 254 0 0
3 574 381 623 332 0 0
4 640 345 689 296 0 0
20 709 327 768 308 0
ans3
19 484 382 543 363 0
anss3
14 461 282 510 233
22 18 30 58 10 0 \NUL
Lab 2
22 18 54 89 34 0 \NUL
Lee, Juan 
22 18 78 73 58 0 \NUL
Jlee543
22 330 41 408 21 0 \NUL
Cheat Code
22 121 433 687 413 0 \NUL
This ciruit either outputs 0000 if the cheat switch is off or the answer if the switch is on.
1 140 152 151 125
1 196 125 211 115
1 140 152 211 165
1 256 179 277 157
1 256 101 277 129
1 322 143 349 140
1 176 195 211 193
1 143 80 211 87
1 134 326 145 299
1 190 299 205 289
1 134 326 205 339
1 250 353 271 331
1 250 275 271 303
1 316 317 343 314
1 170 369 205 367
1 137 254 205 261
1 511 156 522 129
1 567 129 582 119
1 511 156 582 169
1 627 183 648 161
1 627 105 648 133
1 693 147 710 144
1 547 199 582 197
1 514 84 582 91
1 504 329 515 302
1 560 302 575 292
1 504 329 575 342
1 620 356 641 334
1 620 278 641 306
1 686 320 710 317
1 540 372 575 370
1 507 257 575 264
39 16777215
47 0
40 0 6 6
50 800 600
51 0 100
30
System
16
700
0
0
0
0
0
34
